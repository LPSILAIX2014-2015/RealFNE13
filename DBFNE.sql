CREATE DATABASE FNESITE;

USE FNESITE;

-- -- -- -- -- -- -- --
-- -- -- -- -- -- -- -- USER ZONE

-- UTILISATEURS
CREATE TABLE USER   (
	ID            INT AUTO_INCREMENT PRIMARY KEY,
  LOGIN         VARCHAR(50) NOT NULL ,
  PASSWORD      VARCHAR (100),
	ROLE          INT NOT NULL,
	NAME          VARCHAR(50) NOT NULL,
  SURNAME       VARCHAR(50) NOT NULL,
  MAIL          VARCHAR(100) NOT NULL,
  ADRESS        VARCHAR(250) NOT NULL,
  CP            INT  NOT NULL,
  PROFESSION    VARCHAR(50) NOT NULL,
  PROFESSION2   VARCHAR(50),
  PRESENTATION  BLOB,
  PHOTOPATH     VARCHAR(50)
);


-- ASSO
CREATE TABLE ASSOCIATION (
  ID    INT AUTO_INCREMENT PRIMARY KEY,
  NAME  VARCHAR(100) NOT NULL,
  DESCRIPTION VARCHAR(200)

);

-- LIEN USER_ASSO
CREATE TABLE USER_ASSOCIATION (
  IDU INT NOT NULL ,
  IDA INT NOT NULL ,

  CONSTRAINT FK_USERASSO_U FOREIGN KEY (IDU) REFERENCES USER(ID),
  CONSTRAINT FK_USERASSO_A FOREIGN KEY (IDA) REFERENCES ASSOCIATION(ID)

);

-- THEMATIQUES (EAU, SANTE, ETC...)
CREATE TABLE THEME   (
    ID        INT AUTO_INCREMENT PRIMARY KEY,
    NAME      VARCHAR(100) NOT NULL
);

-- TERRITOIRE (ETANG DE TRUC, ETC...)
CREATE TABLE TERRITORY   (
    ID        INT AUTO_INCREMENT PRIMARY KEY,
    NAME      VARCHAR(100) NOT NULL
);

-- LIENS USERS/THEMATIQUES
CREATE TABLE USER_THEME   (
    IDU      INT NOT NULL,
    IDTH      INT NOT NULL,
    
    CONSTRAINT FK_USERTHEME_U FOREIGN KEY (IDU) REFERENCES USER(ID),
    CONSTRAINT FK_USERTHEME_TH FOREIGN KEY (IDTH) REFERENCES THEME(ID)
);

-- LIENS USERS/TERRITOIRE
CREATE TABLE USER_TERRITOIRE   (
    IDU         INT NOT NULL,
    IDT         INT NOT NULL,
    
    CONSTRAINT FK_USERTERRITORY_U FOREIGN KEY (IDU) REFERENCES USER(ID),
    CONSTRAINT FK_USERTERRITORY_T FOREIGN KEY (IDT) REFERENCES TERRITORY(ID)
);

-- -- -- -- -- --
-- -- -- -- -- -- MESSAGES ZONE

-- MESSAGES PRIVES STOCKES
CREATE TABLE MESSAGES  (
    ID          INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    SENDER          INT NOT NULL,
    RECEIVER        INT NOT NULL,
    TITLE           VARCHAR(150) NOT NULL,
    CONTENT         BLOB NOT NULL,
    
    CONSTRAINT FK_MESSAGE_SENDER FOREIGN KEY (SENDER) REFERENCES USER(USER_ID),
    CONSTRAINT FK_MESSAGE_RECEIVER FOREIGN KEY (RECEIVER) REFERENCES USER(USER_ID)
);


-- -- -- -- -- --
-- -- -- -- -- -- ARTICLES ZONE

-- ARTICLES STOCKES
CREATE TABLE POST (
    ID       INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    WRITER        INT NOT NULL,
    TITLE         VARCHAR(150) NOT NULL,
    PDATE         DATE NOT NULL,
    DURATION      INT,
    CONTENT       LONGTEXT,
    
    CONSTRAINT FK_POSTWRITER FOREIGN KEY (WRITER) REFERENCES USER(USER_ID)
);


-- -- -- -- -- --
-- -- -- -- -- -- RAPPORT ZONE

-- RAPPORTS D'ACTIONS
CREATE TABLE REPORT (
    ID      INT NOT NULL AUTO_INCREMENT PRIMARY KEY,
    RDATE   DATE NOT NULL,
    TYPE    INT,
    CONTENT VARCHAR(300)
);


-- -- -- -- -- --
-- -- -- -- -- -- NL ZONE

-- NEWSLETTERS
CREATE TABLE NEWSLETTER (
    ID INT AUTO_INCREMENT PRIMARY KEY,
    NLDATE DATE NOT NULL,
    CONTENT LONGTEXT,
    PATH VARCHAR(200)
);
